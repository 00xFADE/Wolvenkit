using System.IO;
using System.Runtime.Serialization;
using WolvenKit.CR2W.Reflection;
using static WolvenKit.CR2W.Types.Enums;


namespace WolvenKit.CR2W.Types
{
	[DataContract(Namespace = "")]
	[REDMeta]
	public class CBoatDestructionComponent : CComponent
	{
		[Ordinal(0)] [RED("autoGeneratedVolumesX")] 		public CUInt32 AutoGeneratedVolumesX { get; set;}

		[Ordinal(0)] [RED("autoGeneratedVolumesY")] 		public CUInt32 AutoGeneratedVolumesY { get; set;}

		[Ordinal(0)] [RED("autoGeneratorVolumesResizer")] 		public CFloat AutoGeneratorVolumesResizer { get; set;}

		[Ordinal(0)] [RED("destructionVolumes", 2,0)] 		public CArray<SBoatDestructionVolume> DestructionVolumes { get; set;}

		[Ordinal(0)] [RED("boatComponent")] 		public CHandle<CBoatComponent> BoatComponent { get; set;}

		[Ordinal(0)] [RED("collisionForceThreshold")] 		public CFloat CollisionForceThreshold { get; set;}

		[Ordinal(0)] [RED("partsConfig", 2,0)] 		public CArray<SBoatPartsConfig> PartsConfig { get; set;}

		[Ordinal(0)] [RED("attachedSirens", 2,0)] 		public CArray<CHandle<CActor>> AttachedSirens { get; set;}

		[Ordinal(0)] [RED("freeSirenGrabSlots", 2,0)] 		public CArray<CName> FreeSirenGrabSlots { get; set;}

		[Ordinal(0)] [RED("lockedSirenGrabSlots", 2,0)] 		public CArray<CName> LockedSirenGrabSlots { get; set;}

		public CBoatDestructionComponent(CR2WFile cr2w, CVariable parent, string name) : base(cr2w, parent, name){ }

		public static new CVariable Create(CR2WFile cr2w, CVariable parent, string name) => new CBoatDestructionComponent(cr2w, parent, name);

		public override void Read(BinaryReader file, uint size) => base.Read(file, size);

		public override void Write(BinaryWriter file) => base.Write(file);

	}
}